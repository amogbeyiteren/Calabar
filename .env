#DATABASE_URL="mongodb+srv://bolu:bolu123@imq.10yj3f7.mongodb.net/test"
DATABASE_URL="postgres://calabar_user:LWfMcG7Kgs5DHCskPNOvIb0dQpBXo2iI@dpg-coml60kf7o1s73f6i110-a.oregon-postgres.render.com/calabar"
#DATABASE_URL="postgres://postgres.fubhknvfkfezeernboai:8UDqZyDqIb35tpZm@aws-0-eu-central-1.pooler.supabase.com:5432/postgres"
NEXTAUTH_SECRET="nsnscnsncxkxckcixcnixncjxnciscissins"



GITHUB_ID=4da5eeee57bfee3abb9b
GITHUB_SECRET=52c7c9d004a1d9999e5e3ea679b6aac6be59701f

GOOGLE_CLIENT_ID=110658047045-8u4pa7o284eupf1i1bebj52gfpf1gq5d.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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

NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME="derf8sbin"


# model User {
#   id              String      @id @default(auto()) @map("_id") @db.ObjectId
#   name            String?
#   email           String?     @unique
#   emailVerified   DateTime?
#   image           String?
#   hashedPassword  String?
#   createdAt       DateTime    @default(now())
#   updatedAt       DateTime    @updatedAt
#   favoriteIds     String[]    @db.ObjectId
#   role            Role        @default(USER)

#   accounts        Account[]
#   listings        Listing[]
#   reservations    Reservation[]
#   reviews         Review[]    
# }

# enum Role {
#   USER
#   ADMIN
# }

# model Account {
#   id                String      @id @default(auto()) @map("_id") @db.ObjectId
#   userId            String      @db.ObjectId
#   type              String
#   provider          String
#   providerAccountId String
#   refresh_token     String?     @db.String
#   access_token      String?     @db.String
#   expires_at        Int?
#   token_type        String?
#   scope             String?
#   id_token          String?     @db.String
#   session_state     String?

#   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
# }

# model Listing {
#   id              String        @id @default(auto()) @map("_id") @db.ObjectId
#   title           String
#   description     String
#   imageSrc        String
#   createdAt       DateTime      @default(now())
#   category        String
#   center          String?
#   roomCount       Int
#   bathroomCount   Int
#   guestCount      Int
#   locationValue   String
#   userId          String        @db.ObjectId
#   price           Int
#   phoneNumber     String
#   touristCenter   TouristCenter? @relation(fields: [touristCenterId], references: [id], onDelete: SetNull)
#   touristCenterId String?        @db.ObjectId

#   user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
#   reservations    Reservation[]
#   reviews         Review[]      
# }

# model Reservation {
#   id           String    @id @default(auto()) @map("_id") @db.ObjectId
#   userId       String    @db.ObjectId
#   listingId    String    @db.ObjectId
#   startDate    DateTime
#   endDate      DateTime
#   totalPrice   Int
#   createdAt    DateTime  @default(now())

#   user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
#   listing      Listing   @relation(fields: [listingId], references: [id], onDelete: Cascade)
# }

# model Review {
#   id           String    @id @default(auto()) @map("_id") @db.ObjectId
#   userId       String    @db.ObjectId
#   listingId    String    @db.ObjectId
#   rating       Int
#   comment      String?
#   createdAt    DateTime  @default(now())

#   user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
#   listing      Listing   @relation(fields: [listingId], references: [id], onDelete: Cascade)
# }


# model TouristCenter {
#   id       String    @id @default(auto()) @map("_id") @db.ObjectId
#   name     String
#   location String
#   image    String?
#   listings Listing[] 
# }
