generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define your data model
// Define your data model
model User {
  id              String      @id @default(uuid())
  name            String?
  email           String?     @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  favoriteIds     String[]
  role            Role        @default(USER)

  accounts        Account[]
  listings        Listing[]
  reservations    Reservation[]
  reviews         Review[]    
}

enum Role {
  USER
  ADMIN
}

model Account {
  id                String      @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Listing {
  id              String        @id @default(uuid())
  title           String
  description     String
  imageSrc        String
  createdAt       DateTime      @default(now())
  category        String
  center          String?
  roomCount       Int
  bathroomCount   Int
  guestCount      Int
  locationValue   String
  userId          String
  price           Int
  phoneNumber     String
  touristCenterId String?

  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  touristCenter   TouristCenter? @relation(fields: [touristCenterId], references: [id], onDelete: SetNull)
  reservations    Reservation[]
  reviews         Review[]      
}

model Reservation {
  id           String    @id @default(uuid())
  userId       String
  listingId    String
  startDate    DateTime
  endDate      DateTime
  totalPrice   Int
  createdAt    DateTime  @default(now())

  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing      Listing   @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

model Review {
  id           String    @id @default(uuid())
  userId       String
  listingId    String
  rating       Int
  comment      String?
  createdAt    DateTime  @default(now())

  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing      Listing   @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

model TouristCenter {
  id       String    @id @default(uuid())
  name     String
  location String
  image    String?
  listings Listing[] 
}


// npx prisma generate